seat chart or plane class
###This could be done with a 1D array or a series of 3 2D arrays or even a 2D array with some values being blocked from use
-array of seats* #point to the respective seat class (1, e+, e)
-Departure City/Time + Arrival City/Time
-flights it flys*points to flight class

Flight Class
-plane* #points to seat chart/plane class
-passenger* #points to the person class

1st class
-multiplier
-base price
-days early
*points to base seat to store other data

Econ Plus Class
-multiplier
-base price
-days early
-Miles
*points to base seat to store other data

Econ Class
-multiplier
-base price
-days early
*points to base seat to store other data

Base Seat
-price
-person* #points to the person sitting in the seat

Person
-related people* #Shows other people in the group
-seat* #Points at the seat they are sitting in
-ID #Creates a unique ID for the person sitting there
-Itinerary* #Points to all of the different flights the person will be on for their trip

"""
Output should show something like as follows

for each plane
#Name #Length of flight #Base price (for each class)#Rows #Columns

for each flight
#Flight number #passenger list #Departure times #Arrival Times #Departure City #Arrival City

for each person
#Name
#ID
#Days Early
#Class
#Related People's ID or Name
(for each flight in the itenerary #Flight number #Seat number)

Should a flight be canceled for some reason or another, vertex cover would help move the passenger from the cancelled
flight to a new flight of semi optimal pattern with minimal layover.
A simple equation for this could be ((Layover)*(Number of Flights))/(Flight Time)

A method in the person class could move the person from one flight to the next.


###################
Proposed Extensions
###################
-How many seats remain
-Optional meal servive
-How many bags, and extra fees for more bags?
-Overweight fees
-In flight movie
-Priority check-in and boarding
-Noise canceling headphones
